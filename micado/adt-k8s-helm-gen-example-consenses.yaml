tosca_definitions_version: tosca_simple_yaml_1_2
imports:
- https://raw.githubusercontent.com/micado-scale/tosca/develop/micado_types.yaml
repositories:
  docker_hub: https://hub.docker.com/
description: 'Generated from K8s manifests: __helm-generated.yaml'
topology_template:
  node_templates:
    worker-node:
      type: tosca.nodes.MiCADO.Nova.Compute
      properties:
        image_id: <IMAGE_ID>
        flavor_name: <FLAVOR>
        project_id: <PROJECT_ID>
        network_id: <NETWORK_ID>
        key_name: <KEY_NAME>
        security_groups:
          - <SECURITY_GROUP_1>
      interfaces:
        # TERRAFORM: Change key to Terraform
        Occopus:
          create:
            inputs:
              endpoint: https://<API_ENDPOINT>
    mosquitto-test-connection-pod:
      type: tosca.nodes.MiCADO.Kubernetes
      interfaces:
        Kubernetes:
          create:
            inputs:
              apiVersion: v1
              kind: Pod
              metadata:
                name: mosquitto-test-connection
                labels:
                  app.kubernetes.io/name: mosquitto
                  helm.sh/chart: mosquitto-0.2.0
                  app.kubernetes.io/instance: mosquitto
                  app.kubernetes.io/version: 1.6.10
                  app.kubernetes.io/managed-by: Helm
                annotations:
                  helm.sh/hook: test-success
              spec:
                containers:
                - name: wget
                  image: busybox
                  command:
                  - wget
                  args:
                  - 'mosquitto:'
                restartPolicy: Never
    mosquitto-serviceaccount:
      type: tosca.nodes.MiCADO.Kubernetes
      interfaces:
        Kubernetes:
          create:
            inputs:
              apiVersion: v1
              kind: ServiceAccount
              metadata:
                name: mosquitto
                labels:
                  app.kubernetes.io/name: mosquitto
                  helm.sh/chart: mosquitto-0.2.0
                  app.kubernetes.io/instance: mosquitto
                  app.kubernetes.io/version: 1.6.10
                  app.kubernetes.io/managed-by: Helm
    mosquitto-secret:
      type: tosca.nodes.MiCADO.Kubernetes
      interfaces:
        Kubernetes:
          create:
            inputs:
              apiVersion: v1
              kind: Secret
              metadata:
                name: mosquitto
                labels:
                  app.kubernetes.io/name: mosquitto
                  helm.sh/chart: mosquitto-0.2.0
                  app.kubernetes.io/instance: mosquitto
                  app.kubernetes.io/version: 1.6.10
                  app.kubernetes.io/managed-by: Helm
              data:
                client.key:
                  <CLIENT_KEY_DATA>
    mosquitto-configmap:
      type: tosca.nodes.MiCADO.Kubernetes
      interfaces:
        Kubernetes:
          create:
            inputs:
              apiVersion: v1
              kind: ConfigMap
              metadata:
                name: mosquitto
                labels:
                  app.kubernetes.io/name: mosquitto
                  helm.sh/chart: mosquitto-0.2.0
                  app.kubernetes.io/instance: mosquitto
                  app.kubernetes.io/version: 1.6.10
                  app.kubernetes.io/managed-by: Helm
              data:
                mosquitto.conf: "<CONFIG_FILE_DATA>"
                ca.crt: "<CA_CRT_DATA>"
                client.crt: "<CLIENT_CRT_DATA>"
    mosquitto-service:
      type: tosca.nodes.MiCADO.Kubernetes
      interfaces:
        Kubernetes:
          create:
            inputs:
              apiVersion: v1
              kind: Service
              metadata:
                name: mosquitto
                labels:
                  app.kubernetes.io/name: mosquitto
                  helm.sh/chart: mosquitto-0.2.0
                  app.kubernetes.io/instance: mosquitto
                  app.kubernetes.io/version: 1.6.10
                  app.kubernetes.io/managed-by: Helm
              spec:
                type: ClusterIP
                ports:
                - port: 1883
                  targetPort: default
                  protocol: TCP
                  name: default
                - port: 9001
                  targetPort: websocket
                  protocol: TCP
                  name: websocket
                selector:
                  app.kubernetes.io/name: mosquitto
                  app.kubernetes.io/instance: mosquitto
    mosquitto-deployment:
      type: tosca.nodes.MiCADO.Kubernetes
      interfaces:
        Kubernetes:
          create:
            inputs:
              apiVersion: apps/v1
              kind: Deployment
              metadata:
                name: mosquitto
                labels:
                  app.kubernetes.io/name: mosquitto
                  helm.sh/chart: mosquitto-0.2.0
                  app.kubernetes.io/instance: mosquitto
                  app.kubernetes.io/version: 1.6.10
                  app.kubernetes.io/managed-by: Helm
              spec:
                replicas: 1
                selector:
                  matchLabels:
                    app.kubernetes.io/name: mosquitto
                    app.kubernetes.io/instance: mosquitto
                template:
                  metadata:
                    labels:
                      app.kubernetes.io/name: mosquitto
                      app.kubernetes.io/instance: mosquitto
                  spec:
                    serviceAccountName: mosquitto
                    securityContext: {}
                    containers:
                    - name: mosquitto
                      securityContext: {}
                      image: eclipse-mosquitto:1.6.10
                      imagePullPolicy: IfNotPresent
                      ports:
                      - name: default
                        containerPort: 1883
                        protocol: TCP
                      - name: websocket
                        containerPort: 9001
                        protocol: TCP
                      livenessProbe:
                        tcpSocket:
                          port: default
                      readinessProbe:
                        tcpSocket:
                          port: default
                      resources: {}
                      volumeMounts:
                      - name: configmap
                        mountPath: /mosquitto/config
                      - name: secret
                        mountPath: /mosquitto/secret
                    volumes:
                    - name: configmap
                      configMap:
                        name: mosquitto
                    - name: secret
                      secret:
                        secretName: mosquitto
